import javax.swing.*;
import java.awt.*;

/**
 * Created by autoy on 2015/9/13.
 */

public class MainForm extends JFrame {
    MainForm() {
        super("simulation");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLayout(null);
    }

    public static void main(String argus[]) {
        double taxirate[][] = {{0, 52.8, 104, 11.2, 111, 81, 16, 11.2, 1.6},
                {0, 43.2, 152, 16, 126, 60, 14.4, 8, 0},
                {0, 35, 112, 19.2, 70, 40.8, 4.8, 6.4, 0},
                {1.6, 22.4, 74.8, 35.2, 51, 30, 12.8, 12.8, 3.2},
                {6.2, 28.6, 77, 76, 74, 28, 17.4, 9.6, 12.8},
                {27.4, 102.8, 95.2, 76, 165, 78.8, 6.2, 12.4, 9.2},
                {31.6, 133, 96.4, 63.2, 177.8, 107.6, 1.6, 9, 0},
                {14, 173, 105.8, 66.8, 196.2, 139.6, 0, 15.2, 0},
                {23.2, 111.2, 76.6, 64.2, 202, 163, 1.6, 12.2, 3.2},
                {12.4, 142, 81, 7, 155.2, 99, 1.6, 6.4, 0},
                {13.8, 135.2, 55.2, 84, 172, 85.2, 4.8, 18.6, 6.4},
                {10.8, 139.2, 85.2, 65.8, 130, 103.8, 1.6, 6.4, 3.2},
                {7.8, 115, 74.8, 62.8, 116, 74, 4.8, 8, 4.8},
                {6.2, 126.8, 64, 66.2, 96.8, 64, 1.6, 4.8, 6.4},
                {11, 140.2, 98, 92, 150.4, 84.2, 1.6, 4.8, 1.6},
                {10.6, 140.2, 84, 57.4, 191, 101.2, 0, 12.2, 1.6},
                {13.6, 173.4, 67.8, 71.2, 133.8, 94, 1.6, 14.2, 1.6}};
        double passengerrate[][] = {{0.866666667, 5.066666667, 1.483333333, 2.633333333, 4.3, 3.683333333, 0.15, 2, 1},
                {2.483333333, 10.06666667, 3.866666667, 8.05, 9.183333333, 10.86666667, 1.816666667, 4.583333333, 1.866666667},
                {2.766666667, 12.98333333, 4.366666667, 9.65, 15.86666667, 17.91666667, 1.2, 4.083333333, 3.316666667},
                {4.25, 15.1, 8.1, 8.183333333, 16.76666667, 15.65, 0.816666667, 2.483333333, 2.15},
                {6.05, 15.2, 7.533333333, 6.766666667, 12.5, 14.7, 1.05, 1.933333333, 1.816666667},
                {2.483333333, 9.3, 2.783333333, 3.066666667, 11.5, 6.066666667, 0.483333333, 3.15, 2.533333333},
                {1.583333333, 7.016666667, 2.25, 4.3, 9.383333333, 6.75, 0.533333333, 1.866666667, 2.1},
                {1.816666667, 7.683333333, 4.466666667, 3.733333333, 7.266666667, 6.55, 1.483333333, 4.216666667, 2.633333333},
                {2.766666667, 10.6, 3.633333333, 3.35, 9.733333333, 9.366666667, 0.716666667, 2.3, 2.733333333},
                {1.866666667, 8.35, 3.1, 2.45, 14.56666667, 8.483333333, 1.15, 3.383333333, 2.966666667},
                {1.533333333, 7.833333333, 3.683333333, 3.766666667, 12.71666667, 11.13333333, 0.716666667, 2.916666667, 3.633333333},
                {3.316666667, 7.866666667, 3.1, 3.2, 10.23333333, 9.566666667, 2.25, 2.3, 2.583333333},
                {4.433333333, 7.966666667, 3.1, 3.733333333, 15.23333333, 10.2, 1.933333333, 2.433333333, 5.316666667},
                {2.916666667, 8.183333333, 5.216666667, 3.2, 15.58333333, 8.85, 1, 2.583333333, 3.633333333},
                {3.183333333, 8.116666667, 4.666666667, 4.583333333, 9.116666667, 11.81666667, 1.05, 2.766666667, 2.2},
                {4.216666667, 11.15, 5.35, 2.733333333, 12.08333333, 10.48333333, 1.383333333, 3.433333333, 2.483333333},
                {3.033333333, 18.03333333, 5.65, 6.75, 14.66666667, 13.53333333, 1.05, 2.016666667, 3.65},
                {49.56666667, 170.5166667, 72.35, 80.15, 200.7, 175.6166667, 18.78333333, 48.45, 46.61666667}};
        for (int i = 0; i < 17; i++) {
            City city = new City(taxirate[i],passengerrate[i]);
            MainForm mainForm = new MainForm();
            //mainForm.setBounds(0, 0, 1920, 1080);
            // mainForm.setVisible(true);
            int times = 180;
            while (times != 0) {
        /*    try{
                Thread.sleep(2000);
            }
            catch(InterruptedException e)
            {
                e.printStackTrace();
            }*/
                times--;
                city.run(mainForm);
            }
            int bb = 0, n = 0;

            double empty, total;
            /*System.out.println("总人数：" + n + "总时间:" + bb);


                System.out.print("\n");


            }
            for (Area area : city.areas) {
             //   empty = (double) area.emptycount;
                total = (double) area.totalcount;
                System.out.print("\t" +  (int)(total/3));
            }
         for (Area area : city.areas) {
                n++;
                System.out.println("第"+(i+6)+"时第" + n + "区域");
                area.print();
            }*/

            n = 0;
            for (Client aa : city.onBoredLast) {
                bb += aa.timer;
                n++;
            }
            for (Area area : city.areas) {
                area.print();
                empty = (double) area.timer;
                total = (double) area.k;
                System.out.print("\t" +  (total+bb));
            }
            System.out.print("\n");


        }
    }

    void drawDots(City city) {
        Graphics g = this.getGraphics();//g.clearRect(0, 0, 900, 900);
        for (Client cli : city.clientList) {
            if (cli.availability) {
                g.setColor(Color.blue);
                g.fillOval((int) cli.start.x, (int) cli.start.y, 8, 8);
            } else if (!cli.isOnboard) {
                g.setColor(Color.yellow);
                g.fillOval((int) cli.start.x, (int) cli.start.y, 8, 8);
            }
            g.fillOval((int) cli.start.x, (int) cli.start.y, 8, 8);
        }
        for (Taxi ta : city.taxiList) {
            if (ta.isLoaded) {
                g.setColor(Color.green);
            } else {
                g.setColor(Color.red);
            }
            g.fillOval((int) ta.currentPosition.x, (int) ta.currentPosition.y, 8, 8);
        }
    }
}
